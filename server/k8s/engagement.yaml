apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-engagement-deployment
  namespace: ksox-finance
  labels:
    app: server-engagement
spec:
  selector:
    matchLabels:
      app: server-engagement
  template:
    metadata:
      labels:
        app: server-engagement
    spec:
      containers:
        - name: server-engagement
          image: server-engagement
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: 200Mi
              cpu: 200m
            limits:
              memory: 400Mi
              cpu: 400m
          env:
            - name: KSOX_SERVER_BLOCKCHAIN_URL
              value: "http://ksox-server-blockchain/"
            - name: KSOX_WS_BLOCKCHAIN_URL
              valueFrom:
                secretKeyRef:
                  name: ws-blockchain-url
                  key: url
            - name: KSOX_POSTGRES_URL
              value: "postgresql://ksoxuser:ksoxuserp4ssword@ksox-postgres/ksox"
            - name: KSOX_REDIS_URL
              value: "redis://ksox-redis/"
            - name: KSOX_SERVER_ENGINE_URL
              value: "http://ksox-server-engine/"
            - name: CONTRACT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: contract-private-key
                  key: key
            - name: CONTRACT_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: contract-address
            - name: DEPOSIT_CONFIRMATIONS
              value: "5"
            - name: TESTS_CASES
              value: "10000"
            - name: TESTS_FRACTION_BYTES
              value: "2"
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z postgres-service 5432; do echo waiting for postgres; sleep 1.$((RANDOM % 100)); done;",
            ]
        - name: wait-for-redis
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z redis-service 6379; do echo waiting for redis; sleep 1.$((RANDOM % 100)); done;",
            ]
---
apiVersion: v1
kind: Service
metadata:
  name: server-engagement-service
  namespace: ksox-finance
spec:
  selector:
    app: server-engagement
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
